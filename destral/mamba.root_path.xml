<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="0" tests="63" time="0.0210599899292">
	<testsuite disabled="0" errors="0" failures="0" name="mamba.root_path" skipped="0" tests="63" time="0.0210599899292">
		<testcase classname="when the feature exists" name="it should return the feature" status="Passed" time="0.000083"/>
		<testcase classname="readonly decorator" name="it must add cursor factory to method" status="Passed" time="0.000096"/>
		<testcase classname="Translating a view" name="it must translate confirm strings" status="Passed" time="0.000141"/>
		<testcase classname="ORM Exceptions" name="when getting the message of the exception" status="Passed" time="0.000452">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="when only have type and body" name="it should parse only type and body" status="Passed" time="0.000072"/>
		<testcase classname="when the feature doesn't exist" name="it should return None" status="Passed" time="0.000074"/>
		<testcase classname="when getting the message of the exception" name="it must following the format pattern of type -- name\n\nvalue" status="Passed" time="0.000246"/>
		<testcase classname="when getting the message of the exception" name="it is warning type" status="Passed" time="0.000183"/>
		<testcase classname="when evaluating conditions" name="it should return the correct key" status="Passed" time="0.000947"/>
		<testcase classname="when evaluating conditions" name="it should use time builin" status="Passed" time="0.000408"/>
		<testcase classname="when evaluating conditions" name="it should evaluate lists" status="Passed" time="0.000180"/>
		<testcase classname="when evaluating conditions" name="it should work with AND" status="Passed" time="0.000267"/>
		<testcase classname="when evaluating conditions" name="it should work with False/True/None" status="Passed" time="0.000135"/>
		<testcase classname="The Features Flag system" name="creating a feature" status="Passed" time="0.000111">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="The Features Flag system" name="when registering a new feature" status="Passed" time="0.000205">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="The Features Flag system" name="when getting a feature" status="Passed" time="0.000333">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Parsing view to get searchable fields" name="Adding fields with select=&quot;1&quot;" status="Passed" time="0.000011">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Using an API Wrapper" name="it must call osv_pool as normal" status="Passed" time="0.000347"/>
		<testcase classname="The check_for_features method" name="it should be exported" status="Passed" time="0.000064"/>
		<testcase classname="The check_for_features method" name="when getting the features of the server" status="Passed" time="0.000590">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="when getting a feature" name="when the feature exists" status="Passed" time="0.000104">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="when getting a feature" name="when the feature doesn't exist" status="Passed" time="0.000099">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="A Webservice" name="the common service" status="Passed" time="0.000761">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="When converting attrs to json rules" name="if a value is a variable" status="Passed" time="0.000196">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="When converting attrs to json rules" name="if attrs is empty" status="Passed" time="0.000073">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="When converting an OSV Exception" name="it should parse type, title and body" status="Passed" time="0.000182"/>
		<testcase classname="When converting an OSV Exception" name="when only have type and body" status="Passed" time="0.000085">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="When converting an OSV Exception" name="when only have body" status="Passed" time="0.000066">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="When converting an OSV Exception" name="when only have title" status="Passed" time="0.000066">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="When converting an OSV Exception" name="when have multiple " status="Passed" time="0.000012">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="if attrs is empty" name="it should reutn an empty string" status="Passed" time="0.000061"/>
		<testcase classname="when only have title" name="it should parse only title and default type is warning" status="Passed" time="0.000055"/>
		<testcase classname="when getting the features of the server" name="it should return a dict with the feature and the feature as the value" status="Passed" time="0.000573"/>
		<testcase classname="when using read_only" name="it should have the property readonly" status="Passed" time="0.000104"/>
		<testcase classname="when using read_only" name="it should have the property isolation_level" status="Passed" time="0.000085"/>
		<testcase classname="when using read_only" name="it should have readonly and isolation_level both" status="Passed" time="0.000080"/>
		<testcase classname="browse_null" name="it should be comparable to False" status="Passed" time="0.000083"/>
		<testcase classname="browse_null" name="it should be comparable to None" status="Passed" time="0.000062"/>
		<testcase classname="Total" name="The Features Flag system" status="Passed" time="0.000880">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Total" name="ORM Exceptions" status="Passed" time="0.000536">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Total" name="browse_null" status="Passed" time="0.000166">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Total" name="Using an API Wrapper" status="Passed" time="0.000373">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Total" name="Using isolation decorator" status="Passed" time="0.000487">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Total" name="SQL Utilis module" status="Passed" time="0.000187">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Total" name="UI Tools" status="Passed" time="0.003077">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Total" name="Translating a view" status="Passed" time="0.000155">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Total" name="A Webservice" status="Passed" time="0.000801">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="creating a feature" name="it should be True as default" status="Passed" time="0.000072"/>
		<testcase classname="if a value is a variable" name="it should be prefixed with $" status="Passed" time="0.000183"/>
		<testcase classname="Using isolation decorator" name="when using read_only" status="Passed" time="0.000289">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="Using isolation decorator" name="when cursor_factory is a callable" status="Passed" time="0.000089">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="the common service" name="The check_for_features method" status="Passed" time="0.000690">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="when cursor_factory is a callable" name="it should call the callable" status="Passed" time="0.000068"/>
		<testcase classname="SQL Utilis module" name="readonly decorator" status="Passed" time="0.000119">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="UI Tools" name="when parsing attributes conditions" status="Passed" time="0.002054">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="UI Tools" name="When converting an OSV Exception" status="Passed" time="0.000529">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="UI Tools" name="When converting attrs to json rules" status="Passed" time="0.000323">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="UI Tools" name="Parsing view to get searchable fields" status="Passed" time="0.000044">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="when parsing attributes conditions" name="it should parse the keys of attribute" status="Passed" time="0.000055"/>
		<testcase classname="when parsing attributes conditions" name="when evaluating conditions" status="Passed" time="0.001960">
			<system-out>Passed Group</system-out>
		</testcase>
		<testcase classname="when registering a new feature" name="it should be stored in the features repository" status="Passed" time="0.000116"/>
		<testcase classname="when registering a new feature" name="it should fail if there is another feature with the same name" status="Passed" time="0.000061"/>
		<testcase classname="when only have body" name="it should parse only body and default type is warning" status="Passed" time="0.000055"/>
	</testsuite>
</testsuites>
