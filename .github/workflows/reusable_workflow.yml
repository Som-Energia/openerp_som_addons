# This workflow will pass tests of module passed by input

name: ERP_REUSABLE
on:
  workflow_call:
    inputs:
      module:
        required: true
        type: string
      pyversion:
        required: false
        type: string
        default: '["2.7"]'
      erpbranch:
        required: false
        type: string
        default: rolling_erp01
    secrets:
        ACCESS_TOKEN_GA:
            required: true
        ESIOS_TOKEN:
            required: true
        SRID:
            required: true

env:
  POSTGRES_USER: erp
  POSTGRES_PASSWORD: erp
  PYENV_ROOT: /home/runner/.pyenv
  ROOT_DIR_SRC: ${{github.workspace}}/..

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      # You can use PyPy versions in python-version.
      # For example, pypy2 and pypy3
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.pyversion) }}
    services:
      postgres:
        image: timescale/timescaledb-postgis:latest-pg12
        env:
          POSTGRES_USER: erp
          POSTGRES_PASSWORD: erp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      redis:
        image: redis:5.0
        ports:
          # Maps tcp port 6379 on service container to the host
          - 6379:6379
      mongo:
        image: mongo:3.0
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Install pyenv
        run: |
          curl https://pyenv.run | bash
          echo "$PYENV_ROOT/bin" >> $GITHUB_PATH
          echo "$PYENV_ROOT/shims" >> $GITHUB_PATH

      - name: Install Python ${{ matrix.python-version }}
        run: |
          pyenv install ${{ matrix.python-version }}
          pyenv global ${{ matrix.python-version }}
          pip install --upgrade pip setuptools wheel

      - name: Download required repositories
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN_GA }}
        run: |
          git clone --depth 1 https://$GITHUB_TOKEN@github.com/Som-Energia/erp.git -b ${{ inputs.erpbranch }} $ROOT_DIR_SRC/erp
          git clone --depth 1 https://$GITHUB_TOKEN@github.com/Som-Energia/libFacturacioATR.git $ROOT_DIR_SRC/libFacturacioATR
          if [ ! -d "$ROOT_DIR_SRC/openerp_som_addons" ]; then
            git clone --depth 1 https://github.com/Som-Energia/openerp_som_addons.git $ROOT_DIR_SRC/openerp_som_addons
          fi
          if [ ! -d "$ROOT_DIR_SRC/somenergia-generationkwh" ]; then
            git clone --depth 1 https://github.com/Som-Energia/somenergia-generationkwh.git $ROOT_DIR_SRC/somenergia-generationkwh
          fi
          if [ ! -d "$ROOT_DIR_SRC/plantmeter" ]; then
            git clone --depth 1 https://github.com/Som-Energia/plantmeter.git $ROOT_DIR_SRC/plantmeter
          fi
          git clone --depth 1 https://github.com/Som-Energia/giscedata_facturacio_indexada_som.git $ROOT_DIR_SRC/giscedata_facturacio_indexada_som
          if [ ! -d "$ROOT_DIR_SRC/oorq" ]; then
            git clone --depth 1 https://github.com/gisce/oorq.git -b api_v5 $ROOT_DIR_SRC/oorq
          fi
          git clone --depth 1 https://github.com/gisce/poweremail.git $ROOT_DIR_SRC/poweremail2
          git clone --depth 1 https://github.com/gisce/openerp-sentry.git -b v5_legacy $ROOT_DIR_SRC/openerp-sentry
          git clone --depth 1 https://github.com/gisce/ws_transactions.git $ROOT_DIR_SRC/ws_transactions
          git clone --depth 1 https://github.com/gisce/ir_attachment_mongodb.git $ROOT_DIR_SRC/ir_attachment_mongodb
          git clone --depth 1 https://github.com/gisce/mongodb_backend.git -b gisce $ROOT_DIR_SRC/mongodb_backend
          git clone --depth 1 https://github.com/gisce/poweremail-modules.git $ROOT_DIR_SRC/poweremail-modules
          git clone --depth 1 https://github.com/gisce/crm_poweremail.git $ROOT_DIR_SRC/crm_poweremail
          git clone --depth 1 https://github.com/gisce/ooop.git $ROOT_DIR_SRC/ooop

      - name: Install dependencies
        run: |
          sudo apt-get --allow-releaseinfo-change update
          sudo apt-get install python2-dev python3-dev libxml2-dev libxmlsec1 libxmlsec1-dev libgdal-dev -y
          cd $ROOT_DIR_SRC/libFacturacioATR
          git checkout $(git describe --tags `git rev-list --tags --max-count=1`)
          pip install -e .
          cd $ROOT_DIR_SRC/ooop
          git checkout $(git describe --tags `git rev-list --tags --max-count=1`)
          pip install -e .
          cd $ROOT_DIR_SRC/somenergia-generationkwh
          pip install -e . || "Not installing somenergia-generation Python package"
          cd $ROOT_DIR_SRC/plantmeter
          pip install -e . || "Not installing plantmeter Python package"
          pip install -r $ROOT_DIR_SRC/erp/requirements-dev.txt
          pip install -r $ROOT_DIR_SRC/erp/requirements.txt

      - name: Install dependecies for Python 3
        if: matrix.python-version != '2.7'
        run: |
          pip install somutils
          pip install dm.xmlsec.binding

      - name: Install dependencies for Python 2.7
        if: matrix.python-version == '2.7'
        run: |
          git clone --depth 1 https://github.com/Som-Energia/somenergia-utils.git -b py2 $ROOT_DIR_SRC/somenergia-utils
          cd $ROOT_DIR_SRC/somenergia-utils
          pip install -e . || "Not installing somenergia-utils Python package"
          pip install "dm.xmlsec.binding<=1.3.2"

      - name: Link Addons
        run: |
          cd $ROOT_DIR_SRC/erp && ./tools/link_addons.sh

      - name: Run Tests
        env:
          ESIOS_TOKEN: ${{ secrets.ESIOS_TOKEN }}
          SRID: ${{ secrets.SRID }}
        run: |
          export CI_REPO=som-energia/openerp_som_addons
          export CI_PULL_REQUEST=${{ github.event.number }}
          export PYTHONPATH=${{github.workspace}}/../erp/server/bin:${{github.workspace}}/../erp/server/bin/addons:${{github.workspace}}/../erp/server/sitecustomize
          export OPENERP_PRICE_ACCURACY=6
          export OORQ_ASYNC=False
          export OPENERP_SRID=$SRID
          export OPENERP_ESIOS_TOKEN=$ESIOS_TOKEN
          export OPENERP_MONGODB_HOST=localhost
          export OPENERP_REDIS_URL=redis://localhost:6379
          export OPENERP_ROOT_PATH=${{github.workspace}}/../erp/server/bin
          export OPENERP_ADDONS_PATH=$OPENERP_ROOT_PATH/addons
          export OPENERP_DB_HOST=localhost
          export OPENERP_DB_USER=$POSTGRES_USER
          export OPENERP_DB_PASSWORD=$POSTGRES_PASSWORD
          export OPENERP_SII_TEST_MODE=1
          export OPENERP_SECRET="verysecret"
          export OPENERP_IGNORE_PUBSUB=1
          cd ${{github.workspace}}
          destral --report-coverage --enable-coverage --report-junitxml ${{github.workspace}}/test-results/destral -m ${{ inputs.module }}

      - name: Publish Unit Test Results
        if: (success() || failure()) && matrix.python-version == '2.7'
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-results/destral/*.xml
          secondary_rate_limit_wait_seconds: 120.0
