name: Keep PRs alive

on:
  schedule:
    # Cada 60 dies (millor marge que 85/90)
    - cron: "0 3 */60 * *"
  workflow_dispatch:

jobs:
  ping-stale-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Ping and un-stale PRs
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN_GA }}
        run: |
          REPO="gisce/erp"
          TOKEN="$GITHUB_TOKEN"
          API="https://api.github.com/repos/$REPO"

          # Buscar totes les PRs obertes (100 per p√†gina)
          pulls=$(curl -s -H "Authorization: token $TOKEN" \
            "$API/pulls?state=open&per_page=100")

          # Filtrar nom√©s les PRs d'aquests usuaris
          prs=$(echo "$pulls" | jq -r '.[] | select(.user.login=="oriolpiera" or .user.login=="FranciscoCubero") | .number')

          if [ -z "$prs" ]; then
            echo "No hi ha PRs obertes d'aquests usuaris."
            exit 0
          fi

          for pr in $prs; do
            echo "Comprovant PR #$pr"

            # Obtenir informaci√≥ de la PR com a issue (aqu√≠ s√≠ hi ha labels)
            issue=$(curl -s -H "Authorization: token $TOKEN" \
              "$API/issues/$pr")

            has_stale=$(echo "$issue" | jq -r '.labels[]?.name' | grep -x "Stale" || true)

            if [ -n "$has_stale" ]; then
              echo " -> PR #$pr t√© label Stale. Afegint comentari i eliminant label."

              # Afegir comentari
              curl -s -X POST -H "Authorization: token $TOKEN" \
                -d '{"body":"üëã Encara vigent"}' \
                "$API/issues/$pr/comments" > /dev/null

              # Treure etiqueta 'Stale'
              curl -s -X DELETE -H "Authorization: token $TOKEN" \
                "$API/issues/$pr/labels/Stale" > /dev/null
            else
              echo " -> PR #$pr no t√© label Stale."
            fi
          done
